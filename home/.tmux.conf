################################################### OPTIONS

# fix ssh agent when tmux is detached
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock

# Terminal
# Commented
#set-option -g default-terminal "screen-256color"

# utf8
#set -g utf8
#set-window-option -g utf8 on
set-window-option -g allow-rename off

# set the default prefix key combination
#set -g prefix C-a
#unbind C-b

# use send-prefix to pass C-a through to application
bind C-a send-prefix

# visual notification of activity in other windows
setw -g monitor-activity on
set -g visual-activity on
set-option -g bell-action any
#set-option -g visual-bell on

# Set esc time to 0
set -s escape-time 0

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
setw -g pane-base-index 1

# Screensaver
# Error on Arch Linux
#set-option -g lock-server on
set-option -g lock-after-time 1800
set-option -g lock-command 'cmatrix -b -u 9'

################################################### MOUSE

# Allow mouse resize
# Error on Arch Linux
set -g mouse on
setw -g aggressive-resize on

# Allow xterm mouse scroll
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

################################################### KEY BINDINGS

# Bind reload key
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf is reloaded"

# use F1..Fn
#bind -n F1 select-window -t 1
#bind -n F2 select-window -t 2
#bind -n F3 select-window -t 3
#bind -n F4 select-window -t 4
#bind -n F5 select-window -t 5
#bind -n F6 select-window -t 6
#bind -n F7 select-window -t 7
#bind -n F8 select-window -t 8
#bind -n F9 select-window -t 9
#bind -n F10 select-window -t 10
#bind -n F11 select-window -t 11
#bind -n F12 select-window -t 12

################################################### VIM CONFIG

# vi-style controls for copy mode
setw -g mode-keys vi

# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# The following lines has been adapted from:
# dudenbostel.leanside.com/2014/01/copy-paste-in-tmux/

## Bind the prefix + p key to paste the buffer
bind p paste-buffer
## in copy mode...
## Prefix + v begins a selection. (movement keys to select the desired bits)
bind-key -T copy-mode-vi V send-keys -X begin-selection
## Prefix + y copies the current selection to one of tmux's "paste buffers"
##bind -t vi-copy y copy-selection
## prefix + V changes between line- and columnwise
bind-key -T copy-mode-vi v send-keys -X rectangle-toggle
## selection
#bind -t vi-copy Y copy-end-of-line # ^1
bind-key -T copy-mode-vi Y send-keys -X copy-end-of-line
bind-key -T copy-mode-vi y send-keys -X copy-selection
## ---

#bind [ copy-mode \;                                                        \
#    bind -n y run                                                          \
#    "tmux send-keys Enter;                                                 \
#     tmux show-buffer | xclip -i -selection clipboard;                     \
#     tmux unbind -n C-];                                                   \
#     tmux unbind -n ]" \;                                                  \

################################################### VIM PANE BINDINGS (j k h l)
unbind-key j
bind-key j select-pane -D # Similar to 'C-w j' to navigate windows in Vim
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

################################################### TAB SWITCHING WITH VIM STYLE KEYS
# tab like window switching (-n: no prior escape seq)
bind -n m-n new-window
bind -n m-d kill-window
#bind -n S-left prev
bind -n m-j next
bind -n m-k prev
bind -n m-h swap-window -t -1
bind -n m-l swap-window -t +1

################################################### POWERLINE
#source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
#source "/home/afu/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline_tmux_1.9_plus.conf"

#################################################### STATUS
#+ window title:
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I] #W'
set-window-option -g automatic-rename on

##+ status bar:
#set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg '#0e0e0e'
set-option -g status-fg white
set-option -g status-interval 10
set-option -g status-left-length 80
set-option -g status-left '#[fg=#222222]## #[fg=#555555]#T#[default]'
#set-option -g status-right '#[fg=#333333]#S:#P#[default]'
#set-option -g status-left '#[fg=#222223]## #[fg=#555555]#T#[default] #(~/bin/tmux-sysload.sh)#(~/bin/tmux-cputemp.sh) #(~/bin/tmux-netload.sh eth0)#(~/bin/tmux-batload.sh)#(date +"%a %b %_d %H:%M")'
set-option -g status-right '#[fg=#333333]#S:#P#[default]'
#set-option -g status-left '#[fg=#333333]#S:#P#[default]'
#set-option -g status-right '#[fg=#222222]# #[fg=#555555]#T#[default]'
set-option -g visual-activity on
set-window-option -g monitor-activity on

#set-option -g status on
#set-option -g status-interval 10
#set-option -g status-utf8 on
#set-option -g status-position top
#set -g status-justify centre           # center window list for clarity
#set-window-option -g xterm-keys on
#
#set-option -g set-titles on
##set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
##set-option -g set-titles-string '#T-#P' # window number,program name,active (or not)
#set-option -g set-titles-string "#T" # window number,program name,active (or not)
#
## set color for status bar
#set-option -g status-bg colour235 #base02
#set-option -g status-fg yellow #yellow
#set-option -g status-attr dim
#
## set window list colors - red for active and cyan for inactive
#set-window-option -g window-status-fg brightblue #base0
#set-window-option -g window-status-bg colour236
#set-window-option -g window-status-attr dim
#
#set-window-option -g window-status-current-fg brightred #orange
#set-window-option -g window-status-current-bg colour236
#set-window-option -g window-status-current-attr bright
#
## show host name and IP address on left side of status bar
#set -g status-left-length 70
##set -g status-left "#[fg=green]: #h : #[fg=brightblue]#(curl icanhazip.com) #[fg=yellow]#(ifconfig eth0 | grep 'inet ' | awk '{print \"eth0 \" $2}') #(ifconfig eth1 | grep 'inet ' | awk '{print \"eth1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
##set -g status-left "#[fg=brightblue]: #h : #[fg=green] Tasks #(task stats | grep Completed | tr -s ' ') #[fg=red] Tasks #(task stats | grep Pending | tr -s ' ')"
#set -g status-left "#[fg=yellow]: #h : #[fg=green]#(task status:completed count)#[fg=brightwhite]/#[fg=red]#(task status:pending count)"
#
## show session name, window & pane number, date and time on right side of
## status bar
#set -g status-right-length 60
##set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::"
##set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p ::"
##set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]::"
#set -g status-right "#[fg=yellow]%d/%m/%Y"

# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @tpm_plugins "              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-sessionist     \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-copycat        \
"
#  tmux-plugins/tmux-sensible       \
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# initializes TMUX plugin manager
run-shell ~/.tmux/plugins/tpm/tpm
